# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-08-09 23:51
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_ItemCategory', 'Can view ItemCategory'),),
            },
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_jobstatus', 'Can view jobstatus'),),
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_orderstatus', 'Can view orderstatus'),),
            },
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_organism', 'Can view organism'),),
            },
        ),
        migrations.CreateModel(
            name='PaymentTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_paymentterm', 'Can view paymentterm'),),
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('procedure_id', models.AutoField(db_column='Procedure_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
            ],
            options={
                'permissions': (('view_procedure', 'Can view procedure'),),
            },
        ),
        migrations.CreateModel(
            name='QuoteStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_quotestatus', 'Can view quotestatus'),),
            },
        ),
        migrations.CreateModel(
            name='SampleStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_samplestatus', 'Can view samplestatus'),),
            },
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
            ],
            options={
                'permissions': (('view_sampletype', 'Can view sampletype'),),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(db_column='Service_Tag', max_length=63)),
                ('name', models.CharField(db_column='Service_Name', max_length=255)),
                ('price', models.FloatField(db_column='Price')),
                ('non_profit_price', models.FloatField(blank=True, db_column='None_Profit_Price', null=True)),
                ('SOP', models.CharField(blank=True, db_column='SOP', max_length=63, null=True)),
                ('note', models.TextField(blank=True, db_column='Service_Note', null=True)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
                ('procedures', models.ManyToManyField(to='structure.Procedure')),
            ],
            options={
                'permissions': (('view_service', 'Can view service'),),
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(db_column='Service_Package_Tag', max_length=63)),
                ('name', models.CharField(db_column='Service_Package_Name', max_length=255)),
                ('price', models.FloatField(db_column='Price')),
                ('non_profit_price', models.FloatField(blank=True, db_column='None_Profit_Price', null=True)),
                ('note', models.TextField(blank=True, db_column='Service_Package_Note', null=True)),
                ('is_active', models.BooleanField(db_column='Is_Active', default=True)),
                ('services', models.ManyToManyField(to='structure.Service')),
            ],
            options={
                'permissions': (('view_servicepackage', 'Can view service package'),),
            },
        ),
    ]
